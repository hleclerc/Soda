# This file will be completed with static_gurl which is generated by soda
get = 'GET '
    mk_chan |
    static_gurl |
    { error_404(); }

mk_chan = '/_?s=' uint[ v ] ' ' { mk_chan( sipe_data->v ); return WAIT; }

put = 'PUT /_?s=' uint[ v ] '&p=' uint[ u ] ' ' (
        content_length |
        ( eol eol -> end_header ) |
        any
    )** <- end_header { sipe_data->_inp_cont = &&put_cnt; return cmd_put( sipe_data->v, sipe_data->u, sipe_data->length, data + 1, end ); put_cnt: return cmd_put_cnt( sipe_data->v, sipe_data->u, sipe_data->length, data, end );  }

content_length = 'Content-Length: ' uint[ length, PT ]

cmd_new_session = 'S ' uint[ v ] ' ' { cmd_new_session( sipe_data->v ); }
cmd_set_session = 's ' uint[ v ] ' ' { cmd_set_session( sipe_data->v ); }
cmd_creation    = 'N ' uint[ v ] ' ' word[ w ] ' ' { cmd_creation( sipe_data->w, sipe_data->v ); }
cmd_load_ptr    = 'l ' uint[ v ] ' ' uint[ u ] ' ' { cmd_load_ptr( sipe_data->u, sipe_data->v ); }
cmd_set_type    = 'T ' uint[ v ] ' ' word[ w ] ' ' { cmd_set_type( sipe_data->v, sipe_data->w ); }
cmd_change      = 'C ' uint[ v ] ' ' word[ w ] ' ' { cmd_change( sipe_data->v, sipe_data->w ); }
cmd_load        = 'L ' uint[ v ] ' ' word[ w ] ' ' { cmd_load( sipe_data->w, sipe_data->v ); }
cmd_end         = 'E ' { return cmd_end(); }


cmd = '/cmd ' any* eol eol (
    cmd_new_session |
    cmd_set_session |
    cmd_load_ptr |
    cmd_creation |
    cmd_set_type |
    cmd_change |
    cmd_load |
    cmd_end |
    any
)**

post = 'POST ' cmd

main = get | post | put | { error_400(); }
